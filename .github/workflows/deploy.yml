name: CI/CD to AKS with Helm

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v3

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Docker Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: üèóÔ∏è Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/node-helm-app:latest ./node-app
          docker push ${{ secrets.DOCKER_USERNAME }}/node-helm-app:latest

      - name: ‚öôÔ∏è Install kubectl and Helm
        run: |
          KUBECTL_VERSION=$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: üîß Configure Kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
        env:
          KUBECONFIG: $HOME/.kube/config

      - name: üîç Test Cluster Connection
        run: |
          echo "Testing connection to AKS..."
          kubectl cluster-info
        env:
          KUBECONFIG: $HOME/.kube/config

      - name: üöÄ Helm Deploy
        run: |
          helm upgrade --install my-node-app ./helm-chart/node-helm-chart --namespace default
        env:
          KUBECONFIG: $HOME/.kube/config
